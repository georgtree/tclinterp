package require tcltest
namespace import ::tcltest::*

set script_path [file dirname [file normalize [info script]]]
lappend auto_path "$script_path/../"
package require tclinterp 0.1
namespace import ::tclinterp::*

set epsilon 1e-6
proc matchList {expected actual} {
    variable epsilon
    set match true
    set len [llength $expected]
    for {set i 0} {$i<$len} {incr i} {
        set exp [lindex $expected $i]
        set act [lindex $actual $i]
        if {(abs($act-$exp) > $epsilon) || (abs($act-$exp) > $epsilon)} {
            set match false
            break
        }
    }
    return $match
}
customMatch mtchLst matchList

### Linear interpolation tests

test interpLin1dProcTest-1 {test procedure of linear 1d interpolation} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpLin1d -x $x -y $y -xi $xi
} -result [list 2.5 6.5 12.5 20.5] -cleanup {
    unset x y xi
}

test interpLin1dProcTest-2 {test procedure of linear 1d interpolation with different lengths of lists} -setup {
    set x [list 1 2 3 4 5 6]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    catch {interpLin1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Length of x '6' must be equal to y '5'" -cleanup {
    unset x y xi errorStr
}

test interpLin1dProcTest-3 {test procedure of linear 1d interpolation with zero length of xi} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi {}
} -body {
    catch {interpLin1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Length of interpolation points list xi must be more than zero" -cleanup {
    unset x y xi errorStr
}

test interpLin1dProcTest-4 {test procedure of linear 1d interpolation with different non-double value of list element} -setup {
    set x [list 1 2 3 4 5i]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    catch {interpLin1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "List must contains only double elements, but get '5i'" -cleanup {
    unset x y xi errorStr
}

test interpLin1dProcTest-5 {test procedure of linear 1d interpolation with non-monotonic x} -setup {
    set x [list 1 2 3 5 4]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    catch {interpLin1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Independent variable array x not strictly increasing" -cleanup {
    unset x y xi errorStr
}

test interpLin1dProcTest-6 {test procedure of linear 1d interpolation} -match mtchLst -setup {
    set x [list -1 -0.8 -0.6 -0.4 -0.2 0 0.2 0.4 0.6 0.8 1]
    set y [list 0.0384615 0.0588235 0.1 0.2 0.5 1 0.5 0.2 0.1 0.0588235 0.0384615]
    set xi [list -1.2000 -1.1500 -1.1000 -1.0500 -1.0000 -0.9500 -0.9000 -0.8500 -1.0000 -0.7500 -0.7000 -0.6500\
                    -1.0000 -0.5500 -0.5000 -0.4500 -1.0000 -0.3500 -0.3000 -0.2500 -1.0000 -0.1500 -0.1000 -0.0500\
                    -1.0000 0.0500 0.1000 0.1500 -1.0000 0.2500 0.3000 0.3500 -1.0000 0.4500 0.5000 0.5500\
                    -1.0000 0.6500 0.7000 0.7500 -1.0000 0.8500 0.9000 0.9500 1.0000 1.0500 1.1000]
} -body {
    return [interpLin1d -x $x -y $y -xi $xi]
} -result [list 0.0180995 0.02319 0.0282805 0.033371 0.0384615 0.043552 0.0486425 0.053733 0.0384615 0.0691176\
                   0.0794118 0.0897059 0.0384615 0.125 0.15 0.175 0.0384615 0.275 0.35 0.425 0.0384615 0.625 0.75\
                   0.875 0.0384615 0.875 0.75 0.625 0.0384615 0.425 0.35 0.275 0.0384615 0.175 0.15 0.125 0.0384615\
                   0.0897059 0.0794118 0.0691176 0.0384615 0.053733 0.0486425 0.043552 0.0384615 0.033371\
                   0.0282805] -cleanup {
    unset x y xi
}

### Linear interpolation tests

test interpNear1dProcTest-1 {test procedure of nearest 1d interpolation} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpNear1d -x $x -y $y -xi $xi
} -result [list 4.0 9.0 16.0 25.0] -cleanup {
    unset x y xi
}

test interpNear1dProcTest-2 {test procedure of nearest 1d interpolation with different lengths of lists} -setup {
    set x [list 1 2 3 4 5 6]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    catch {interpNear1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Length of x '6' must be equal to y '5'" -cleanup {
    unset x y xi errorStr
}

test interpNear1dProcTest-3 {test procedure of nearest 1d interpolation with zero length of xi} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi {}
} -body {
    catch {interpNear1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Length of interpolation points list xi must be more than zero" -cleanup {
    unset x y xi errorStr
}

test interpNear1dProcTest-4 {test procedure of nearest 1d interpolation} -setup {
    set x [list 1 3 2 4 5]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpNear1d -x $x -y $y -xi $xi
} -result [list 1.0 9.0 16.0 25.0] -cleanup {
    unset x y xi
}

test interpNear1dProcTest-5 {test procedure of nearest 1d interpolation} -match mtchLst -setup {
    set x [list -1 -0.951057 -0.809017 -0.587785 -0.309017 6.12323e-17 0.309017 0.587785 0.809017 0.951057 1]
    set y [list 0.0384615 0.0423501 0.0575947 0.103764 0.295221 1 0.295221 0.103764 0.0575947 0.0423501 0.0384615]
    set xi [list -1.0489 -1.0367 -1.0245 -1.0122 -1.0000 -0.9878 -0.9755 -0.9633 -1.0000 -0.9155 -0.8800 -0.8445\
                    -1.0000 -0.7537 -0.6984 -0.6431 -1.0000 -0.5181 -0.4484 -0.3787 -1.0000 -0.2318 -0.1545 -0.0773\
                    -1.0000 0.0773 0.1545 0.2318 -1.0000 0.3787 0.4484 0.5181 -1.0000 0.6431 0.6984 0.7537 -1.0000\
                    0.8445 0.8800 0.9155 -1.0000 0.9633 0.9755 0.9878 1.0000 1.0122 1.0245]
} -body {
    return [interpNear1d -x $x -y $y -xi $xi]
} -result [list 0.0384615 0.0384615 0.0384615 0.0384615 0.0384615 0.0384615 0.0423501 0.0423501 0.0384615 0.0423501\
                   0.0575947 0.0575947 0.0384615 0.0575947 0.103764 0.103764 0.0384615 0.103764 0.295221 0.295221\
                   0.0384615 0.295221 1.0 1.0 0.0384615 1.0 1.0 0.295221 0.0384615 0.295221 0.295221 0.103764 0.0384615\
                   0.103764 0.103764 0.0575947 0.0384615 0.0575947 0.0575947 0.0423501 0.0384615 0.0423501 0.0423501\
                   0.0384615 0.0384615 0.0384615 0.0384615] -cleanup {
    unset x y xi
}

### Lagrange polynomial interpolation tests

test interpLagr1dProcTest-1 {test procedure of Lagrange polynomial 1d interpolation} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpLagr1d -x $x -y $y -xi $xi
} -result [list 2.25 6.25 12.25 20.25] -cleanup {
    unset x y xi
}

test interpLagr1dProcTest-2 {test procedure of Lagrange polynomial 1d interpolation with different lengths of lists} -setup {
    set x [list 1 2 3 4 5 6]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    catch {interpLagr1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Length of x '6' must be equal to y '5'" -cleanup {
    unset x y xi errorStr
}

test interpLagr1dProcTest-3 {test procedure of Lagrange polynomial 1d interpolation with zero length of xi} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi {}
} -body {
    catch {interpLagr1d -x $x -y $y -xi $xi} errorStr
    return $errorStr
} -result "Length of interpolation points list xi must be more than zero" -cleanup {
    unset x y xi errorStr
}

test interpLagr1dProcTest-4 {test procedure of Lagrange polynomial 1d interpolation} -setup {
    set x [list 1 3 2 4 5]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpLagr1d -x $x -y $y -xi $xi
} -result [list 10.453125 5.078125 7.953125 24.078125] -cleanup {
    unset x y xi
}

test interpLagr1dProcTest-5 {test procedure of Lagrange polynomial 1d interpolation} -match mtchLst -setup {
    set x [list -1 -0.6 -0.2 0.2 0.6 1]
    set y [list 0.0384615 0.1 0.5 0.5 0.1 0.0384615]
    set xi [list -1.4000 -1.3000 -1.2000 -1.1000 -1.0000 -0.9000 -0.8000 -0.7000 -1.0000 -0.5000 -0.4000 -0.3000\
                    -1.0000 -0.1000 0.0000 0.1000 -1.0000 0.3000 0.4000 0.5000 -1.0000 0.7000 0.8000 0.9000 1.0000\
                    1.1000 1.2000]
    set epsilon 1e-5
} -body {
    return [interpLagr1d -x $x -y $y -xi $xi]
} -result [list  1.79231 1.07512 0.567308 0.232812 0.0384615 -0.0460337 -0.0480769 0.0078125 0.0384615 0.209736\
                   0.321154 0.421274 0.0384615 0.55012 0.567308 0.55012 0.0384615 0.421274 0.321154 0.209736 0.0384615\
                   0.0078125 -0.0480769 -0.0460337 0.0384615 0.232813 0.567308] -cleanup {
    unset x y xi
                   }

### Least squares polynomial interpolation tests

test interpLeast1dProcTest-1 {test procedure of least squares polynomial interpolation} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set nterms 2
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpLeast1d -x $x -y $y -xi $xi -nterms $nterms
} -result [list 2.0 8.0 14.0 20.0] -cleanup {
    unset x y xi
}

test interpLeast1dProcTest-2 {test procedure of least squares polynomial interpolation} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpLeast1d -x $x -y $y -xi $xi -coeffs
} -result "yi {2.25 6.25 12.25 20.25} coeffs {b {3.0 3.0 42.0} c {0.0 2.0 0.0} d {11.0 6.0 1.0}}" -cleanup {
    unset x y xi
}

test interpLeast1dProcTest-3 {test procedure of least squares polynomial interpolation} -setup {
    set x [list 1 2 3 4 5]
    set y [list 1 4 9 16 25]
    set w [list 1 2 2 2 1]
    set xi [list 1.5 2.5 3.5 4.5]
} -body {
    interpLeast1d -x $x -y $y -xi $xi -w $w -coeffs
} -result "yi {2.25 6.25 12.25 20.25} coeffs {b {3.0 3.0 54.0} c {0.0 1.5 0.0} d {10.5 6.0 1.0}}" -cleanup {
    unset x y xi
}

test interpLeast1dProcTest-4 {test procedure of least squares polynomial interpolation} -match mtchLst -setup {
    set x [list -1 -0.9 -0.8 -0.7 -0.6 -0.5 -0.4 -0.3 -0.2 -0.1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1]
    set y [list -4 -4.29 -4.56 -4.81 -5.04 -5.25 -5.44 -5.61 -5.76 -5.89 -6 -6.09 -6.16 -6.21 -6.24 -6.25 -6.24 -6.21\
                   -6.16 -6.09 -6]
    set xi $x
} -body {
    interpLeast1d -x $x -y $y -xi $xi -nterms 1
} -result [list -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333\
                   -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333 -5.63333] -cleanup {
    unset x y xi
}

test interpLeast1dProcTest-5 {test procedure of least squares polynomial interpolation} -match mtchLst -setup {
    set x [list -1 -0.9 -0.8 -0.7 -0.6 -0.5 -0.4 -0.3 -0.2 -0.1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1]
    set y [list -4 -4.29 -4.56 -4.81 -5.04 -5.25 -5.44 -5.61 -5.76 -5.89 -6 -6.09 -6.16 -6.21 -6.24 -6.25 -6.24 -6.21\
                   -6.16 -6.09 -6]
    set xi $x
} -body {
    interpLeast1d -x $x -y $y -xi $xi -nterms 3
} -result [list -4 -4.29 -4.56 -4.81 -5.04 -5.25 -5.44 -5.61 -5.76 -5.89 -6 -6.09 -6.16 -6.21 -6.24 -6.25 -6.24 -6.21\
                   -6.16 -6.09 -6] -cleanup {
    unset x y xi
}

cleanupTests
